syntax = "proto2";

package org.elasticsoftware.elasticactors.serialization.protobuf;


option optimize_for = SPEED;

// WARNING:
//    you must not change the tag numbers of any existing fields.
//    you must not add or delete any required fields.
//    you may delete optional or repeated fields.
//    you may add new optional or repeated fields but you must use fresh tag numbers (i.e. tag numbers that were never
//        used in this protocol buffer, not even by deleted fields).

message TraceData {
  required string spanId = 1;
  required string traceId = 2;
  optional string parentSpanId = 3;
}

message RealSenderData {
  optional string realSender = 1;
  optional string realSenderType = 2;
}

message ScheduledMessage {
  optional bytes id = 1;
  optional uint64 fireTime = 2;
  optional string receiver = 3;
  optional string sender = 4;
  optional string messageClass = 5;
  optional bytes message = 6;
  optional RealSenderData realSenderData = 7;
  optional TraceData traceData = 8;
}

message InternalMessage {
  optional string receiver = 1;
  optional string sender = 2;
  optional string payloadClass = 3;
  optional bytes payload = 4;
  optional bytes id = 5;
  optional bool durable = 6;
  optional bool undeliverable = 7;
  repeated string receivers = 8;
  optional uint32 timeout = 9;
  optional RealSenderData realSenderData = 10;
  optional TraceData traceData = 11;
}

enum ActorType {
  PERSISTENT = 0;
  TEMP = 1;
  SERVICE = 2;
}

message CreateActorMessage {
  optional string actorId = 1;
  optional bytes initialState = 2;
  optional string actorClass = 3;
  optional string actorSystem = 4;
  optional ActorType type = 5;
  optional string affinityKey = 6;
}

message DestroyActorMessage {
  optional string actorRef = 1;
}

message ActivateActorMessage {
  optional string actorSystem = 1;
  optional string actorId = 2;
  optional ActorType type = 3;
}

message WireMessage {
  optional string queueName = 1;
  optional bytes internalMessage = 2;
}

message CancelScheduledMessageMessage {
  optional bytes messageId = 1;
  optional uint64 fireTime = 2;
}

message ActorNodeMessage {
  optional string receiver = 1;
  optional string nodeId = 2;
  optional string payloadClass = 3;
  optional bytes payload = 4;
  optional bool undeliverable = 5;
}

message PersistActorMessage {
  optional string actorRef = 1;
}