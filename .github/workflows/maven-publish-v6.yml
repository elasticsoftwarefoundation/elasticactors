# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Release V6 Branch

on:
  push:
    tags:
      - v6*

jobs:
  build:
    concurrency: release-v6
    name: Release to Maven Central
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
        check-latest: true
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        settings-path: ${{ github.workspace }}
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven
      run: >
        mvn
        --show-version
        --batch-mode
        --no-transfer-progress
        --activate-profiles release
        --file pom.xml
        --settings $GITHUB_WORKSPACE/settings.xml
        clean
        compile
        test-compile
    - name: Verify with Maven
      run: >
        mvn
        --show-version
        --batch-mode
        --no-transfer-progress
        --activate-profiles release
        --file pom.xml
        --settings $GITHUB_WORKSPACE/settings.xml
        verify
      env:
        SIGN_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        SIGN_KEY_PASS: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
    - name: Publish to Maven Central
      run: >
        mvn
        --show-version
        --batch-mode
        --no-transfer-progress
        --activate-profiles release
        --file pom.xml
        --settings $GITHUB_WORKSPACE/settings.xml
        deploy
        -DskipTests
        -Dmaven.install.skip=true
      env:
        SIGN_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        SIGN_KEY_PASS: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
    - name: Create an automatic release
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
